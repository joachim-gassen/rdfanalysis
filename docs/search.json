[{"path":"/articles/analyzing_rdf.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"idea -development rdfanalysis package provide coding environment allows researchers systematically document analyze degrees freedom research designs. notion “researcher degrees freedom” introduced Simmons et al., (Psyc Science, 2011). words (p. 1359): culprit construct refer researcher degrees freedom. course collecting analyzing data, researchers many decisions make: data collected? observations excluded? conditions combined ones compared? control variables considered? specific measures combined transformed ? vignette use case guide process use package analysis makes inherent researcher degrees freedom transparent. outcome activity similar multiverse analysis approach suggested Steeger et al. (Persp Psych Sci 2016).","code":""},{"path":"/articles/analyzing_rdf.html","id":"the-case","dir":"Articles","previous_headings":"","what":"The Case","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"case assess impact real Gross Domestic Product (GDP) per capita life expectancy. association become known Preston Curve (Preston, Pop Studies, 1975). Preston (1975): Changing Relation Mortality level Economic Development, Population Studies (29): 235. estimate respective coefficient GDP per capita multiple regression framework panel data set country-year data provided World Bank (GDP per capita, life expectancy birth unemployment rates), Wittgenstein Center mean years schooling received country inhabitants 15 years older. schooling data available 5 year intervals , interpolate years -linearly keep data annual frequency (another research degree freedom, know …). want explore data underlying case, click access interactive data exploration tool based ExPanDaR package. tool, can also re-generate protocols study hand. analysis meant contribute question whether causal link GDP per capita life expectancy (see Lutz Kebede, Pop Dev Review 2018 recent discussion), design analysis identifying assumptions causal interpretation findings explicit.","code":""},{"path":"/articles/analyzing_rdf.html","id":"step-1-define-research-design-by-a-series-of-functions","dir":"Articles","previous_headings":"","what":"Step 1: Define research design by a series of functions","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"Every research design can implemented series functions function receives output previous function parameter produces output next function. terminology rdfanalysis package, function called “design step”. comes “choices” can either discrete continuous nature. choices generate researcher degrees freedom. set made choices across steps design constitutes “research protocol”. total number feasible research protocols equals researcher degrees freedom research design. case designs, first step reads generates data, last step generates results. principle, rdfanalysis package agnostic data structure constitutes result. cases, result take form one several confidence intervals. case, 95 % confidence interval effect 10 % GDP per capita increase life expectancy years, provided three variables: estimate (est) lower bound (lb) upper bound (ub). assess impact GDP per capita life expectancy, case design follows following steps Read data Select independent variables model Treat extreme observations Specify model Estimate model step implemented function. set functional structure, use command define_design(). function creates series function templates directory choice. Existing files -written. can choose whether want functions one R file whether want generate separate files. going separate files .","code":"library(rdfanalysis) library(dplyr) library(ggplot2) library(readr) library(ExPanDaR) library(knitr) library(testthat)  design <- define_design(steps = c(\"read_data\",                                    \"select_idvs\",                                    \"treat_extreme_obs\",                                    \"specify_model\",                                    \"est_model\"),                         rel_dir = \"case_study_code\")"},{"path":"/articles/analyzing_rdf.html","id":"step-2-implement-design-steps","dir":"Articles","previous_headings":"","what":"Step 2: Implement design steps","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"take look newly created directory, see set R files. file contains template like : task now implement code step. , first set step_description choice_description. variable takes vector strings concatenated R Markdown code provide code documentation (see prepare_design_documentation() ). Use variables explain step choices contains. Let’s apply first design step read_data(). import raw data, can decide whether require country-year observation non-missing data potential variables. implement discrete choice, document choice_description specify choice_type. weight parameter can used provide choice (weighting choices) priori assume supported theory. final function read_data() provided . simply reads CSV file containing data, limits sample required variables deletes cases missing data choice na.omit set \"yes\". steps follow approach. case study, implement following choices: select_idvs(): selects independent variables want include regression model. idvs names variables. treat_extreme_obs(): treats extreme observations otherwise tend highly influential regression outcomes. outlier_tment_style indicates whether want use truncating winsorizing. outlier_cutoff holds percentile cutoff. can within range [0, 0.1] (0 10 %, 0 indicating outlier treatment). specify_model(): provides specification regression model. model_type determines whether model estimated level-level, log-level, level-log log-log specification. est_model(): estimates main effect interest. make estimates comparable across different model specifications model coefficients transformed estimates life expectancy effect years 10 % increase GDP per capita. choice feffects determines fixed effects used (none, country, year ) cluster indicates standard errors clustered (, country, year, two-way country year). choices rather standard choices research designs based observational data. Taken together assuming want generate outlier cases percentile 0 10, generate \\(2 * 4 * 2 * 11 * 4 * 4 * 4 = 11,264\\) researcher degrees freedom! find four functions. Copy paste template files generate research design.","code":"step_name <- function(input = NULL, choice = NULL) {   # This is a template for a design step   # to be used by the rdfanalysis package   # See https://joachim-gassen.github.io/rdfanalysis   # for further information on how to use this template   # and the package.    # Feel free to delete any/all lines containing comments but leave   # the line containing (\"Analysis code starts below\") unchanged.    # Provide your documentation in the two variables below.   # They will be used by prepare_design_documentation()    step_description <- c(     \"## [Step Title]\",     \"### Content\",     \"\",     \"[Explain what the step does]\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"`[name of discrete choice]`: A character value containing one of the\",     \"following values:\",     \"\",     \"- `[valid_value 1]`: [What this choice does]\",     \"- `[valid_value n]`: [What that choice does]\",     \"\",     \"`[name of continuous choice]`: [Explain valid range for continuous choice\",     \"and what it does]\"   )    # Specify your valid choices below. Format will be checked by test_design()   # for consistency    choice_type <- list(     list(name = \"[name of discrete choice]\",          type = \"character\",          valid_values = c(\"[valid_value 1]\", \"[valid_value n]\"),          # weights are not required but they need to add up to one if          # they are provided. Adjust the example below          weights = c(0.8, 0.2)),     list(name = \"[name of continuous choice]\",          type = \"double\",          valid_min = 0, valid_max = 0.1,          # weights for continuous choices are provided by a sample of choices.          # Could be just one value. Adjust the example below          weight_sample = c(0, rep(0.01, 4), rep(0.05, 4)))   )    # You should not need to change anything in the following code section    if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)    # Leave the following comment untouched. It is being used by   # prepare_design_documentation() to identify the part of the step   # that should be included in the documentation.    # ___ Analysis code starts below ___    # Here you need to add your code.    # If this is the first step of your design, you can access input data via the   # input parameter. If it is a subsequent step, you can access input data   # via input$data and the protocol leading to this step by input$protocol.    # Make sure that you address all choices identified above.    # In the return block below, you need to replace the placeholder with the   # variable that contains the data that you want to return as output   # to the next step or as a result if this is the last step.    return(list(     data = \"[variable containing your output data structure here]\",     protocol = list(choice)   )) } read_data <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Read data\",     \"### Content\",     \"\",     \"Reads country year world bank data CSV file and generates raw sample\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"`na.omit`: A character value containing one of the\",     \"following values:\",     \"\",     \"- `yes`: All observations with missing data are excluded\",     \"- `no`: All observations with missing data are included\"   )    choice_type <- list(     list(name = \"na.omit\",          type = \"character\",          valid_values = c(\"yes\", \"no\"),          weights = c(1, 0))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)   # ___ Analysis code starts below ___    df <- read_csv(input, col_types = cols()) %>%     mutate_at(c(\"country\", \"year\"), as.factor) %>%     select(country, year,            lifeexpectancy, gdp_capita,            mn_yrs_school, unemployment)    if(choice == \"yes\") df <- df %>%     na.omit()    return(list(     data = df,     protocol = list(choice)   )) } select_idvs <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Identify the variables for analysis\",     \"### Content\",     \"\",     \"Select the variables that you want to use in the regression analysis.\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"`idvs`: A character value containing one of the\",     \"following values:\",     \"\",     \"- `gdp_only`: GDP per capita only\",     \"- `gdp_school`: GDP per capita and mean years schooling\",     \"- `gdp_ue`: GDP per capita and unemployment\",     \"- `full`: Full model including all three variables\"   )   choice_type <- list(     list(name = \"idvs\",          type = \"character\",          valid_values = c(\"gdp_only\", \"gdp_school\", \"gdp_ue\", \"full\"),          weights = c(0, 0, 0, 1))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)   # ___ Analysis code starts below ___    df <- switch (choice[[1]],                 \"gdp_only\" = input$data %>% select(-mn_yrs_school, -unemployment),                 \"gdp_school\" = input$data %>% select(-unemployment),                 \"gdp_ue\" = input$data %>% select(-mn_yrs_school),                 \"full\" = input$data   )    protocol <- input$protocol   protocol[[length(protocol) + 1]] <-  choice   return(list(     data = df,     protocol = protocol   )) }   treat_extreme_obs <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Select the type of outlier treatment\",     \"### Content\",     \"\",     \"Select how you want to treat extreme observations. They can be winsorized or truncated\",     \"to a given percentile of the data.\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"A list containing a character value `outlier_tment_style` and a numerical value `outlier_cutoff`.\",     \"`outlier_tment_style` may take one of the following values:\",     \"\",     \"- `win`: Winsorization\",     \"- `trunc`: Truncation\",     \"\",     \"`outlier_cutoff` sets the cut-off percentile for the outlier treatment\",     \"and may take any value within [0, 0.10]\"   )   choice_type <- list(     list(name = \"outlier_tment_style\",          type = \"character\",          valid_values = c(\"win\", \"trunc\"),          weights = c(0.5, 0.5)),     list(name = \"outlier_cutoff\",          type = \"double\",          valid_min = 0, valid_max = 0.1,          weight_sample = c(0, 0, rep(0.01, 4), rep(0.05, 4)))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)   # ___ Analysis code starts below ___    if (choice[[2]] == 0) {     protocol <- input$protocol     protocol[[length(protocol) + 1]] <-  choice     return(list(       data = input$data,       protocol = protocol     ))   }    switch(choice[[1]],          \"win\" = {            df <- input$data            df[, 3:ncol(df)] <-              treat_outliers(df[, 3:ncol(df)], percentile = choice[[2]])            df          },          \"trunc\" = {            df <- input$data            df[, 3:ncol(df)] <-              treat_outliers(df[, 3:ncol(df)],                             percentile = choice[[2]],                             truncate = TRUE)            df          })    protocol <- input$protocol   protocol[[length(protocol) + 1]] <-  choice   return(list(     data = df,     protocol = protocol   )) }   specify_model <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Specify the model type to be estimated\",     \"### Content\",     \"\",     \"Specify whether you want to estimate a level model or whether you\",     \"want to use log tansformed dependent and/or independent variables.\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"`model_type`: A character value containing one of the\",     \"following values:\",     \"\",     \"- `level-level`: Use untransformed dependent and independent variables\",     \"- `log-level`: Use log-transformed dependent and\",     \"untransformed independent variables\",     \"- `level-log`: Use untransformed dependent and\",     \"log-transformed independent variables\",     \"- `log-log`: Use log-transformed dependent and independent variables\"   )   choice_type <- list(     list(name = \"model_type\",          type = \"character\",          valid_values = c(\"level-level\", \"log-level\",                           \"level-log\", \"log-log\"),          weights = c(0, 0, 0.5, 0.5))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)   # ___ Analysis code starts below ___    df <- input$data    if (choice == \"log-level\" | choice == \"log-log\")     df$lifeexpectancy <- log(df$lifeexpectancy)   if (choice == \"level-log\" | choice == \"log-log\")     df[,4:ncol(df)] <- log(df[,4:ncol(df)])    protocol <- input$protocol   protocol[[length(protocol) + 1]] <- choice    return(list(     data = df,     protocol = protocol   )) }   est_model <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Estimates the model\",     \"### Content\",     \"\",     \"Uses a multiple regression setup to generate an estimate and\",     \"a confidence interval for the effect of a 10 % increase in GDP per capita\",     \"on life expectancy in years.\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"A list containing two character values: `cluster` and `feffect`.\",     \"`cluster` defines the clustering of standard errors and\",     \"`feffect` defines the fixed effect structure of the model.\",     \"Each value may take one of the following values:\",     \"\",     \"- `none`, `ctry`, `year` or `ctryyear`\"   )   choice_type <- list(     list(name = \"feffect\",          type = \"character\",          valid_values = c(\"none\", \"country\", \"year\", \"ctryyear\"),          weights = c(0, 0, 0, 1)),     list(name = \"cluster\",          type = \"character\",          valid_values = c(\"none\", \"country\", \"year\", \"ctryyear\"),          weights = c(0, 0, 0, 1))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)    # ___ Analysis code starts below ___    f <- paste0(\"lifeexpectancy ~ \",               paste(colnames(input$data)[4:length(input$data)], collapse = \" + \"))    if (choice[[1]] == \"country\" || choice[[1]] == \"year\") f <- paste0(f, \"| \", choice[[1]])   else if (choice[[1]] == \"ctryyear\") f <- paste0(f, \" | country + year\")    if (choice[[2]] == \"none\") form <- as.formula(f)   else if (choice[[1]] == \"none\") f <- paste0(f, \" | 0 \")    if (choice[[2]] == \"country\" || choice[[2]] == \"year\") f <- paste0(f, \"| 0 | \", choice[[2]])   else f <- paste0(f, \"| 0 | country + year \")    if (choice[[2]] != \"none\") form <- as.formula(f)    mod <- lfe::felm(form, input$data)   protocol <- input$protocol    if (protocol[[4]][[1]] == \"level-level\")     mult <- log(1.1)*mean(input$data$gdp_capita, na.rm = TRUE)   else if (protocol[[4]][[1]] == \"level-log\")     mult <- log(1.1)   else if (protocol[[4]][[1]] == \"log-level\")     mult <- log(1.1)*mean(input$data$gdp_capita, na.rm = TRUE) *     mean(exp(input$data$lifeexpectancy), na.rm = TRUE)   else mult <- log(1.1)*mean(exp(input$data$lifeexpectancy), na.rm = TRUE)   l <- list(     est = mod$coefficients[row.names(mod$coefficients) == 'gdp_capita'] * mult,     lb = confint(mod)[row.names(mod$coefficients) == 'gdp_capita', 1] * mult,     ub = confint(mod)[row.names(mod$coefficients) == 'gdp_capita', 2] * mult   )    protocol[[length(protocol) + 1]] <-  choice   return(list(     data = l,     protocol = protocol,     model = mod   )) }"},{"path":"/articles/analyzing_rdf.html","id":"step-3-source-test-and-document-design","dir":"Articles","previous_headings":"","what":"Step 3: Source, test and document design","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"implementing design, need source . addition, can test design code input parameter consistency stage. test verify step provides step description, choice description valid choice types user called without input parameter. weights provided, test verifies weights add one within valid choice range. test complain. Next, command prepare_design_documentation() produces PDF document based step_description choice_description provided step. default, also includes “pay load” code design step. addition, command prepare_design_flow_chart() produces visualization design steps choices.","code":"source_design(design, rel_dir = \"case_study_code\") test_design(design, reporter = \"minimal\") #> ............................................................................................................................................... prepare_design_documentation(design, \"preston_curve_design.pdf\") prepare_design_flow_chart(design)"},{"path":"/articles/analyzing_rdf.html","id":"step-4-optional-but-encouraged-simulate-data-for-additional-testing-and-power-analysis","dir":"Articles","previous_headings":"","what":"Step 4 (optional but encouraged): Simulate data for additional testing and power analysis","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"strictly necessary, useful next step simulate raw data. Simulating data early project can helpful various reasons: allows test design steps without requiring work real data, strictly speaking constitute breach “don’t mix exploration inference” rule. can simulate expected effect verify design identifies correctly. can assess power design. demonstrate steps, use quick’n’dirty simulation approach. creates country year panel simulates data roughly comparable real data. uses following level-log setup: \\(lifeexpectancy = \\beta_0 + \\frac{es}{\\log(1.1)}\\log(gdp\\_capita) + 10\\log(mn\\_yrs\\_school) + 5log(unemployment) + \\epsilon\\) \\(\\beta_0\\) based country-level base-lines adjusted sample means independent variables. effect es 10 % increase log(gdp_capita) lifeexpectancy years main variable interest. Like read_data() function, sim_data() returns path temporary CSV file containing simulated data. Using code can now test whether design steps able process data. tests whether based simulated data step able run feasible choice, producing output creating warnings errors. looks good. Now let’s see whether design generates effect estimate consistent effect 1 year simulated. , pick protocol consistent simulation, meaning use full model since sim_data() incorporated effects unemployment mn_yrs_school, treat outliers, use level-log model specification, include country year fixed effects also cluster standard errors country year. use function simulate_design_power() step. function runs provided protocol simulated data, specified sample effect size. sample size given cross-sectional units . function returns data frame containing results simulation run. density point estimates allows us assess consistency design.  looks OK. Now: power? continue assume 10% increase GDP per capita increases life expectancy year. likely able observe effect data? Let’s see whether enough power detect effect.  n, number cross-sectional units (countries) simulation, increases, distribution point estimates simulated effect narrows centers simulated effect size one year. good. number countries needed, assuming 15 observations per country, reach power \\(0.8\\)?  Roughly 40 countries, yielding 600 observations. world bank data observations . , power issue analysis, least effect size comparable one assumed. now verified design capable identify simulated effect without bias sufficient power. Time run real data.","code":"sim_data <- function(countries = 75, es = 1, years = 15) {   n <- countries * years   df <- expand.grid(country = as.factor(1:countries),                      year = as.ordered((2016 - years + 1):2016))    mm_gdp_capita <- 18000   sd_gdp_capita <- 20000   location <- log(mm_gdp_capita^2 / sqrt(sd_gdp_capita^2 + mm_gdp_capita^2))   shape <- sqrt(log(1 + (sd_gdp_capita^2 / mm_gdp_capita^2)))    base_gdp_capita <- rlnorm(countries, location, shape)   base_unemp <- rbeta(countries, 2, 20)*100   base_mn_yrs_school <- pmax(pmin(rnorm(countries, 4, 2), 13), 1)   base_le <- rnorm(countries, 70, 10)   base_le[base_le > 70] <- 70 + 0.6 * (base_le[base_le > 70] - 70)    for (yr in (2016 - years + 1):2016) {     if (yr == 2016 - years + 1) df$gdp_capita[df$year == yr] <- base_gdp_capita     else df$gdp_capita[df$year == yr] <- pmax(df$gdp_capita[df$year == yr - 1] +         rnorm(countries, 0, 0.01 * sd_gdp_capita), 100) *         (1 + rnorm(countries, 0.02, 0.02))   }   df$mn_yrs_school <- pmax(rep(base_mn_yrs_school, years) +                               0.1 * (log(df$gdp_capita) - mean(log(df$gdp_capita))) +                               rnorm(n, 0.5, 0.3), 1)   df$unemployment <- pmax(rep(base_unemp, years) -                              0.2 * (log(df$gdp_capita) -                                       mean(log(df$gdp_capita))) +                              rnorm(n, 0.2, 0.2), 0.0001)   df$lifeexpectancy <- rep(base_le, years) -      10 * mean(log(df$mn_yrs_school)) +      5 * mean(log(df$unemployment)) -     (es/log(1.1)) * mean(log(df$gdp_capita)) +     10 * log(df$mn_yrs_school) -       5 * log(df$unemployment) +     (es/log(1.1)) * log(df$gdp_capita) +      rnorm(n, 0, 5)    df$lifeexpectancy <- pmax(df$lifeexpectancy, 30)   df <- df[, c(\"country\", \"year\", \"lifeexpectancy\",                 \"gdp_capita\", \"mn_yrs_school\", \"unemployment\")]   tfile <- tempfile(\"simdata\", fileext = c(\".csv\"))   write_csv(df, tfile)   tfile } test_design(design, input = sim_data(), reporter = \"minimal\") #> ............................................................................................................................................................................................................................................................................................... power_df <-    simulate_design_power(design,                          protocol = list(na_omit = \"no\",                                          idvs = \"full\",                                         list(                                           outlier_tment_style = \"win\",                                           outlier_cutoff = 0                                         ),                                         model_type = \"level-log\",                                         list(                                           fecffect = \"ctryyear\",                                           cluster = \"ctryyear\"                                         )),                          input_sim_func = sim_data,                          range_n = 150,                         effect_size = 1)  ggplot(power_df, aes(x = est)) +    geom_density(color = NA, fill = \"lightblue\") +   theme_minimal() power_df <-    simulate_design_power(design,                          protocol = list(na_omit = \"no\",                                          idvs = \"full\",                                         list(                                           outlier_tment_style = \"win\",                                           outlier_cutoff = 0                                         ),                                         model_type = \"level-log\",                                         list(                                           fecffect = \"ctryyear\",                                           cluster = \"ctryyear\"                                         )),                          input_sim_func = sim_data,                          range_n = seq(10, 100, 10),                         effect_size = 1)  ggplot(power_df, aes(x = n, y = est)) +    geom_point(color = \"lightblue\", position = position_dodge(width = 0.5)) +   theme_minimal() power_df %>%   na.omit() %>%   group_by(n) %>%   summarize(power = sum(lb > 0)/n()) %>%   ggplot(aes(x = n, y = power)) + geom_line(color = \"lightblue\", size = 2) +   theme_minimal()"},{"path":"/articles/analyzing_rdf.html","id":"step-5-estimate-effect","dir":"Articles","previous_headings":"","what":"Step 5: Estimate effect","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"provided weights design step choice, can now estimate effect applying weights design. done first running exhaust_design(..., weight = TRUE) actual data using returned protocol estimates function call input calculate_weighted_estimate(). estimated weighted effect size 0.112 much smaller simulated effect one year. can also assess results twelve protocols non-zero weights. protocol estimates significant conventional 95 % level twelve protocols. can also run single protocol analyze full model results. Note , implemented design returns estimate life expectancy effect years 10 % increase GDP per capita, documented model estimates level-log specification transformed produce estimate. Based selected model, 10 % increase GDP per capita associated \\(1.241 \\log(1.1) \\approx 0.118\\) years change life expectancy. Overall, one can conclude additional explanatory power independent variables explaining life expectancy modest one allows country year fixed effects. Consistent Lutz Kebede (2018), find pronounced significant association schooling life expectancy, due potential reverse causality issues hesitant argue causality . robust weighted effect estimate across documented researcher degrees freedom? Time exhaust design across available design choices.","code":"weighted_ests <- exhaust_design(design, \"https://joachim-gassen.github.io/data/wb_new.csv\",                                 weight = TRUE) weighted_eff <- calculate_weighted_estimate(weighted_ests, \"est\", \"lb\", \"ub\") kable(as.data.frame(weighted_eff), digits = 3) kable(weighted_ests, digits = 3) res <-   read_data(\"https://joachim-gassen.github.io/data/wb_new.csv\", \"yes\") %>%   select_idvs(\"full\") %>%   treat_extreme_obs(list(\"win\", 0.01)) %>%   specify_model(\"level-log\") %>%   est_model(list(\"ctryyear\", \"ctryyear\"))  summary(res$model) #>  #> Call: #>    lfe::felm(formula = form, data = input$data)  #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -7.3006 -0.6092  0.0612  0.6129 10.8838  #>  #> Coefficients: #>               Estimate Cluster s.e. t value Pr(>|t|)     #> gdp_capita      1.2410       0.4051   3.063  0.00534 **  #> mn_yrs_school   7.4985       1.2991   5.772 5.98e-06 *** #> unemployment   -0.1483       0.3381  -0.439  0.66482     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 1.567 on 3798 degrees of freedom #> Multiple R-squared(full model): 0.9751   Adjusted R-squared: 0.9738  #> Multiple R-squared(proj model): 0.128   Adjusted R-squared: 0.08228  #> F-statistic(full model, *iid*):748.9 on 199 and 3798 DF, p-value: < 2.2e-16  #> F-statistic(proj model): 14.47 on 3 and 24 DF, p-value: 1.373e-05"},{"path":"/articles/analyzing_rdf.html","id":"step-6-assess-robustness-of-effect","dir":"Articles","previous_headings":"","what":"Step 6: Assess robustness of effect","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"now exhaust design choices estimate effect feasible protocol. combine 11,264 protocols, running code take . load data generated commented lines disk. Let’s see estimates distribute across researcher degrees freedom.  Quite range estimates. coefficients vary model specification? quick overview package implemented specification curve visual suggested Simonsohn, Simmons Nelson.  visual based 10 % sample estimates (can adjusted via sample_frac parameter). provides good first impression , overall distribution main estimate interest well influential choices. example, see type estimation model influential magnitude effect. able assess precise range estimates conditional discrete choice, now use plot_rdf_by_dchoice() function histogram-based ridge lines instead densities.  line overall shape Preston curve, specifications untransformed (level) independent variables generate estimates closer zero ones log-transformed independent variables. following, concentrate specifications log-transformed independent variables hypothesized.  influence applied fixed effect structure coefficient interest striking. set country year fixed effects controls unobserved time-invariant cross-sectional heterogeneity unobserved cross-sectionally-invariant time trends. former can explained , e.g., regional determinants like climate influencing life expectancy latter developments medical services social aspects materialize across time constant across countries. likely influential theoretical grounds, limit analysis now protocols employ country firm fixed effects use log-transformed independent variables. Also, limit analysis models estimate confidence intervals based two-way clustered standard errors.  Hmm… protocols generate estimate roughly range 0.05 0.15 years, univariate estimates smaller even zero. Let’s focus second see whether driven sample selection.  Yes, seems case. assessed univariately largest possible sample, range estimates becomes considerably larger. driven extreme observations?  seems case. general, stricter outlier treatment, larger estimate. addition, univariate level-log specifications generating larger slightly narrower estimates compared univariate log-log specification, consistent percentage increase GDP rather associated absolute increase life expectancy relative one. seems reasonable diminishing rates returns wealth. last test focus multivariate analyses just use schooling additional control, since including unemployment reduces sample size contributing little explanatory power model.  , outliers turn influential opposite direction. Focusing narrower estimates level-log specification, becomes apparent removing outliers truncating renders estimate smaller insignificant, winsorizing extreme values little coefficient.","code":"# ests <- exhaust_design(design, #                        \"https://joachim-gassen.github.io/data/wb_new.csv\") # save(ests, file = \"case_study_ests.RData\")  load(\"case_study_ests.RData\") plot_rdf_estimate_density(ests, \"est\", \"lb\", \"ub\", color = \"lightblue\") +   theme_minimal() plot_rdf_spec_curve(ests, \"est\", \"lb\", \"ub\", sample_frac = 0.1) plot_rdf_ridges_by_dchoice(ests, \"est\", \"model_type\", hist = TRUE, scale = 0.9, fill = \"lightblue\", color = NA) log_ests <- ests %>%   filter(model_type == \"level-log\" | model_type == \"log-log\")  plot_rdf_ridges_by_dchoice(log_ests, \"est\", \"feffect\", hist = TRUE, scale = 0.9, fill = \"lightblue\", color = NA) rel_ests <- log_ests %>%   filter(feffect == \"ctryyear\" &             cluster == \"ctryyear\")  plot_rdf_ridges_by_dchoice(rel_ests, \"est\", \"idvs\", hist = TRUE, scale = 0.9, fill = \"lightblue\", color = NA) rel_ests %>%   filter(idvs == \"gdp_only\") %>%   plot_rdf_ridges_by_dchoice(\"est\", \"na.omit\", hist = TRUE, scale = 0.9, fill = \"lightblue\", color = NA) rel_ests %>%   filter(idvs == \"gdp_only\",          na.omit == \"no\") %>%    plot_rdf_estimates_by_choice(\"est\", \"lb\", \"ub\", \"outlier_tment_style\",                                 color = \"model_type\", order = \"outlier_cutoff\", width = 0.008) rel_ests %>%   filter(na.omit == \"no\",          idvs == \"gdp_school\") %>%   plot_rdf_estimates_by_choice(\"est\", \"lb\", \"ub\", \"outlier_tment_style\",                                 color = \"model_type\", order = \"outlier_cutoff\", width = 0.008)"},{"path":"/articles/analyzing_rdf.html","id":"summing-up","dir":"Articles","previous_headings":"","what":"Summing up","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"Using rdfanalysis package, able systematically explore 11,264 degrees freedom identified supposedly straight-forward panel data analysis observational data. Allowing time-invariant country-level unobservables country-invariant unobservables affecting time-series controlling unemployment years schooling, estimate effect 10 % increase GDP per capita life expectancy area 0.03 0.2 years. Assuming unobservables reverse causality issues affect findings, coefficient interpreted causal, given courageous assumptions strongly advise . can assessed researcher degrees freedom exploration, estimate one many feasible estimates. total range estimates spans lower bound -0.35 upper bound 0.92 years. Three observations stand exploration: country-year fixed effect structure large dampening effect estimates. Using log-transformed values independent variables generally increases estimates. implicit sample selection caused including additional control variables also influential estimate tends increase . impressive see number researcher degrees freedom even simple research design like one hand implies. hope rdfanalysis package might motivate researchers think deeply choice set explore document findings transparently. remarks vignette package, love hear . Feel free reach via email twitter. Enjoy!","code":""},{"path":"/articles/analyzing_rdf.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"Analyzing Researcher Degrees of Freedom: A Case Study","text":"find code run data ExPanD shiny web app extensive interactive exploration. can re-generate protocols . online version accessible .","code":"library(tidyverse) library(ExPanDaR)  df_all <- read_csv(\"https://joachim-gassen.github.io/data/wb_new.csv\", col_types = cols()) %>%   mutate_at(c(\"country\", \"year\"), as.factor) %>%   mutate_at(c(\"lifeexpectancy\", \"gdp_capita\",            \"mn_yrs_school\", \"unemployment\"), list(ln = log)) %>%   select(country, region, year,           gdp_capita, lifeexpectancy,          mn_yrs_school, unemployment,          gdp_capita_ln, lifeexpectancy_ln,           mn_yrs_school_ln, unemployment_ln)   df_na.omit <- df_all %>% na.omit  wb_var_def <- worldbank_var_def %>%   slice(c(1,2,4,8,23,19)) %>%   left_join(worldbank_data_def, by = c(\"var_def\" = \"var_name\")) %>%   select(-var_def) %>%   rename(var_def = var_def.y,          type = type.x) %>%   select(var_name, var_def, type, can_be_na) %>%   add_row(var_name = \"mn_yrs_school\", var_def = \"Mean number of years spent in school, age group 15+. Source: Wittgenstein Centre for Demography and Global Human Capital (2018). Wittgenstein Centre Data Explorer Version 2.0. Data between five year intervals are based on linear interpolation.\",            type = \"numeric\", can_be_na = 1, .after = 5)  for (var in c(\"gdp_capita\", \"lifeexpectancy\", \"mn_yrs_school\", \"unemployment\")) {   wb_var_def <- rbind(wb_var_def,                       list(paste0(var, \"_ln\"), paste(\"Log-transformed version of\", var), \"numeric\", 1)) }  abstract <- paste(\"<p>&nbsp;<\/p><p>This interactive display is part of the \",                   \"<a href=https://joachim-gassen.github.io/rdfanalysis>\",                   \"R package rdfanalysis<\/a>.\",                   \"The package provides researchers with a coding framework\",                   \"that supports formal documentation and systematic\",                   \"exploration of the researcher degrees of freedom that are\",                   \"inherent in research designs.<\/p>\",                   \"<p>Data is provided by the World Bank and the Wittgenstein\",                   \"Centre and used to assess the impact of real\",                   \"gross domestic product (GDP) per capita on life expectancy.\",                   \"This association has become known as the Preston Curve.<p>\",                   \"You can choose below whether you want to examine a sample\",                   \"with or without missing observations. Hover over the\",                   \"variable names in the descriptive table to see variable\",                   \"definitions and use the various displays to explore the\",                    \"data.<p>\",                   \"Joachim Gassen - <a href=mailto:gassen@wiwi.hu-berlin.de>\",                   \"gassen@wiwi.hu-berlin.de<\/a> - March 2019\")   ExPanD(list(df_all, df_na.omit),         df_name = c(\"All observations\", \"Observations with NAs omitted\"),        df_def = wb_var_def,        title = \"Explore the Link Between National Income and Life Expectancy (Preston Curve)\",        abstract = abstract)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joachim Gassen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gassen J (2023). rdfanalysis: Researcher Degrees Freedom Analysis. R package version 0.0.0.9000, https://joachim-gassen.github.io/rdfanalysis.","code":"@Manual{,   title = {rdfanalysis: Researcher Degrees of Freedom Analysis},   author = {Joachim Gassen},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://joachim-gassen.github.io/rdfanalysis}, }"},{"path":[]},{"path":"/index.html","id":"a-package-to-explore-and-document-your-degrees-of-freedom","dir":"","previous_headings":"","what":"A package to explore and document your degrees of freedom","title":"Researcher Degrees of Freedom Analysis","text":"-development package provides coding infrastructure allows researchers systematically document explore researcher degrees freedom conducting analyses observational data. resulting code base self-documenting, supports unit testing power simulations based simulated data. documented researcher degrees freedom can exhausted generate distribution outcome estimates.","code":""},{"path":"/index.html","id":"new-plot-a-specification-curve","dir":"","previous_headings":"A package to explore and document your degrees of freedom","what":"New: Plot a specification curve","title":"Researcher Degrees of Freedom Analysis","text":"displays specification curve (Simonsohn, Simmons Nelson) based systematic exploration Preston curve. summarizes 11,264 regressions one plot. See blog article vignette detail. code works result data frame created following procedure , also works data frames contain choices coefficient estimates created means.","code":"# devtools::install_github(\"joachim-gassen/rdfanalysis\") library(rdfanalysis) load(url(\"https://joachim-gassen.github.io/data/rdf_ests.RData\")) plot_rdf_spec_curve(ests, \"est\", \"lb\", \"ub\")"},{"path":"/index.html","id":"even-newer-let-your-researchers-degrees-of-freedom-shine","dir":"","previous_headings":"A package to explore and document your degrees of freedom","what":"Even newer: Let your researcher’s degrees of freedom shine!","title":"Researcher Degrees of Freedom Analysis","text":"explore specification curve can also use shiny frontend included package. use coding infrastructure package even allows interactively explore findings single regression output full specification curve. See . Shiny Specification Curve","code":"# devtools::install_github(\"joachim-gassen/rdfanalysis\") library(rdfanalysis) load(url(\"https://joachim-gassen.github.io/data/rdf_ests.RData\"))  # The following is based on having a local fork of the repo. See the # vignettes of the package to learn more about how to use the full # rdfanalsis package.  design <- define_design(steps = c(\"read_data\",                                   \"select_idvs\",                                   \"treat_extreme_obs\",                                   \"specify_model\",                                   \"est_model\"),                         rel_dir = \"vignettes/case_study_code\")  shiny_rdf_spec_curve(ests, list(\"est\", \"lb\", \"ub\"),                      design, \"vignettes/case_study_code\",                      \"https://joachim-gassen.github.io/data/wb_new.csv\")"},{"path":"/index.html","id":"a-package-tour","dir":"","previous_headings":"","what":"A Package Tour","title":"Researcher Degrees of Freedom Analysis","text":"provide quick tour full package workflow use “research design” independent variable x confounded co-variate z researcher degree freedom whether control z regression setup. ignore testing bit quick walk-. -depth introduction package, please refer vignette included documentation.","code":""},{"path":"/index.html","id":"step-1-open-a-new-rstudio-project-in-a-clean-directory-and-install-the-rdfanalysis-package","dir":"","previous_headings":"A Package Tour","what":"Step 1: Open a new Rstudio project in a clean directory and install the rdfanalysis package","title":"Researcher Degrees of Freedom Analysis","text":"","code":"devtools::install_github(\"joachim-gassen/rdfanalysis\") library(rdfanalysis)"},{"path":"/index.html","id":"step-2-write-a-function-that-simulates-data","dir":"","previous_headings":"A Package Tour","what":"Step 2: Write a function that simulates data","title":"Researcher Degrees of Freedom Analysis","text":"","code":"sim_data <- function(n, effect_size) {   z <- rnorm(n)   x <- rnorm(n) + z    y <- effect_size*x + z + rnorm(n)    data.frame(x = x, y = y, z = z) }"},{"path":"/index.html","id":"step-3-define-your-research-design-by-a-series-of-functions","dir":"","previous_headings":"A Package Tour","what":"Step 3: Define your research design by a series of functions","title":"Researcher Degrees of Freedom Analysis","text":"research design consists series steps. step becomes function. initialize functions, can use call define_design(). creates code directory current working directory produces template code step. case, design one step.","code":"design <- define_design(\"est_model\")"},{"path":"/index.html","id":"step-4-develop-your-code-for-each-step","dir":"","previous_headings":"A Package Tour","what":"Step 4: Develop your code for each step","title":"Researcher Degrees of Freedom Analysis","text":"Edit resulting template file est_model.R code directory looks like code .","code":"est_model <- function(input = NULL, choice = NULL) {   step_description <- c(     \"## Estimate model\",     \"### Content\",     \"\",     \"This step estimates on OLS model based on simulated data.\"   )   choice_description <- c(     \"### Choice\",     \"\",     \"A character value `control_for_z` that may take one of the following values:\",     \"\",     \"- `yes`: control for z\",     \"- `no`: do not control for z\"   )   choice_type <- list(     list(name = \"control_for_z\",           type = \"character\",           valid_values = c(\"yes\", \"no\"))   )   if (is.null(choice)) return(list(     step_description = step_description,     choice_description = choice_description,     choice_type = choice_type   )) else check_choice(choice, choice_type)    # ___ Analysis code starts below ___   if(choice[[1]] == \"yes\")      mod <- lm(y ~ x + z, data = input)   else     mod <- lm(y ~ x, data = input)   return(list(     data = list(       est = summary(mod)$coefficient[2,1],       lb = confint(mod)[2,1],       ub = confint(mod)[2,2]     ),     protocol = list(choice)   ))   }"},{"path":"/index.html","id":"step-5-source-your-code","dir":"","previous_headings":"A Package Tour","what":"Step 5: Source your code","title":"Researcher Degrees of Freedom Analysis","text":"","code":"source_design(design)"},{"path":"/index.html","id":"step-6-test-your-code","dir":"","previous_headings":"A Package Tour","what":"Step 6: Test your code","title":"Researcher Degrees of Freedom Analysis","text":"","code":"test_design(design, input = sim_data(100, 0.1), reporter = \"minimal\") ## ........................"},{"path":"/index.html","id":"step-7-document-your-design","dir":"","previous_headings":"A Package Tour","what":"Step 7: Document your design","title":"Researcher Degrees of Freedom Analysis","text":"serves documentation purposes. function prepare_design_documentation() generates PDF file project directory documents code. work need local R Markdown installation capable produce PDF files. prepare_design_flow_chart() produces quick visual code flow.","code":"prepare_design_documentation(design, output_file = \"my_design.pdf\") prepare_design_flow_chart(design, landscape = TRUE)"},{"path":"/index.html","id":"step-8-run-a-single-protocol-of-choices","dir":"","previous_headings":"A Package Tour","what":"Step 8: Run a single protocol of choices","title":"Researcher Degrees of Freedom Analysis","text":"","code":"sim_data(100, 0.1) %>%   est_model(\"yes\") ## $data ## $data$est ## [1] 0.1762571 ##  ## $data$lb ## [1] -0.03138844 ##  ## $data$ub ## [1] 0.3839027 ##  ##  ## $protocol ## $protocol[[1]] ## [1] \"yes\""},{"path":"/index.html","id":"step-9-assess-the-power-of-your-analysis-for-a-certain-protocol","dir":"","previous_headings":"A Package Tour","what":"Step 9: Assess the power of your analysis for a certain protocol","title":"Researcher Degrees of Freedom Analysis","text":"","code":"power_df <- simulate_design_power(design, protocol = list(\"yes\"),                                    input_sim_func = sim_data,                                    range_n = seq(100, 1000, 100),                                   effect_size = 0.1)  library(tidyverse) power_df %>%   group_by(n) %>%   summarise(power = sum(lb > 0)/n()) %>%   ggplot(aes(x = n, y = power)) +   geom_line() +    theme_minimal()"},{"path":"/index.html","id":"step-10-exhaust-your-researcher-degrees-of-freedom","dir":"","previous_headings":"A Package Tour","what":"Step 10: Exhaust your researcher degrees of freedom","title":"Researcher Degrees of Freedom Analysis","text":"two researcher degrees freedom setting easily get thousands real research setting. real-life case study use rdfanalysis, please refer vignette included documentation.","code":"df <- exhaust_design(design, sim_data(1000, 0.1)) kable(df)"},{"path":"/index.html","id":"project-funding","dir":"","previous_headings":"","what":"Project Funding","title":"Researcher Degrees of Freedom Analysis","text":"project Open Science Data Center funded Deutsche Forschungsgemeinschaft (DFG, German Research Foundation): Project-ID 403041268 – TRR 266 Accounting Transparency.","code":""},{"path":"/reference/calculate_weighted_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Weighted Estimate — calculate_weighted_estimate","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"Provide estimate based user-specified weights choices research design.","code":""},{"path":"/reference/calculate_weighted_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"","code":"calculate_weighted_estimate(df, est, lb, ub)"},{"path":"/reference/calculate_weighted_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"df data frame generated exhaust_design(..., weight = TRUE). est character value indicating variable df contains point estimate. lb character value indicating variable df contains lower bound estimate. ub character value indicating variable df contains upper bound estimate.","code":""},{"path":"/reference/calculate_weighted_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"list containing \"Estimate\" Weighted estimate \"Lower bound\" Weighted lower bound \"Upper bound\" Weighted upper bound \"n\" Number model estimates used generate weighted estimate","code":""},{"path":"/reference/calculate_weighted_estimate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"See vignette package details implement RDF workflow.","code":""},{"path":"/reference/calculate_weighted_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Weighted Estimate — calculate_weighted_estimate","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/check_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Design Step Choice — check_choice","title":"Check Design Step Choice — check_choice","text":"Checks whether certain choice complies provided choice_type. helper function called step template documentation block choice NULL.","code":""},{"path":"/reference/check_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Design Step Choice — check_choice","text":"","code":"check_choice(choice, choice_type)"},{"path":"/reference/check_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Design Step Choice — check_choice","text":"choice list containing choices choice_type list lists characterizing valid choices. Needs specified user design step.","code":""},{"path":"/reference/check_choice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Design Step Choice — check_choice","text":"","code":"check_choice(list(\"my_choice\"),     list(list(name = \"achoice\",               type = \"character\",               valid_values = c(\"my_choice\", \"another_choice\")))) #> NULL"},{"path":"/reference/define_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Your Research Design and Create Code Directory with Step Templates — define_design","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"generates directory rel_dir (defaulting \"./code\"). directory create set files templates code steps joint file containing step templates.","code":""},{"path":"/reference/define_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"","code":"define_design(   steps,   rel_dir = \"./code\",   one_file = FALSE,   one_file_name = \"design_steps.R\" )"},{"path":"/reference/define_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"steps character vector containing names step functions. members need valid R names. rel_dir relative path directory want create step templates. one_file TRUE, templates stored file name one_file_name. FALSE (default), step template stored separate file step name acting file name. one_file_name name code file conating step templates step templates stored one file. Defaults \"design_steps.R\".","code":""},{"path":"/reference/define_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"steps parameter.","code":""},{"path":"/reference/define_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"See vignette package details.","code":""},{"path":"/reference/define_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define Your Research Design and Create Code Directory with Step Templates — define_design","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/exhaust_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Exhaust all Researcher Degrees of Freedom — exhaust_design","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"Parse research design, iterating possible choices, thereby exhausting documented researcher degrees freedom. Returns data frame containing results choice combinations.","code":""},{"path":"/reference/exhaust_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"","code":"exhaust_design(   d,   start_input,   weight = FALSE,   est_by_cchoice = 10,   verbose = FALSE )"},{"path":"/reference/exhaust_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"d character vector research design steps function names. start_input input data first step. weight Whether step's choices weighted user assigned weights included choice_type. Protocols zero weight excluded analysis. Defaults FALSE. est_by_cchoice continous choice evaluated est_by_choice equally spaced steps, staring valid_min ending valid_max. verbose Set TRUE additional diagnostic output. Useful large designs take process.","code":""},{"path":"/reference/exhaust_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"data frame containing results feasible choice permutations.","code":""},{"path":"/reference/exhaust_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"See vignette package details.","code":""},{"path":"/reference/exhaust_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exhaust all Researcher Degrees of Freedom — exhaust_design","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/exhaust_design_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"Parse research design, iterating possible choices, thereby exhausting documented researcher degrees freedom. Uses parallel package enable parallel computing. Returns data frame containing results choice combinations.","code":""},{"path":"/reference/exhaust_design_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"","code":"exhaust_design_parallel(   d,   start_input,   cl = NULL,   libs = NULL,   export = ls(globalenv()),   weight = FALSE,   est_by_cchoice = 10,   verbose = FALSE )"},{"path":"/reference/exhaust_design_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"d character vector research design steps function names start_input input data first step. cl Either return value parallel::make_cluster() number cores want function start. cl NULL clusters used. libs libraries design steps rely . export members environment want export parallel cores. Defaults members global environment. weight Whether step's choices weighted user assigned weights included choice_type. Protocols zero weight excluded analysis. Defaults FALSE. est_by_cchoice continuous choice evaluated est_by_choice equally spaced steps, staring valid_min ending valid_max. verbose Set TRUE additional diagnostic output. Useful large designs take process.","code":""},{"path":"/reference/exhaust_design_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"data frame containing results feasible choice permutations.","code":""},{"path":"/reference/exhaust_design_parallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"See vignette package details.","code":""},{"path":"/reference/exhaust_design_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exhaust all Researcher Degrees of Freedom in Parallel — exhaust_design_parallel","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/plot_rdf_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"Visualizes estimates generated exhausting documented researchers degrees freedom.","code":""},{"path":"/reference/plot_rdf_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"","code":"plot_rdf_estimate_density(df, est, lb, ub, color = \"blue\", n = 30)"},{"path":"/reference/plot_rdf_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"df data frame generated exhaust_design(). est character value indicate variable df contains pont estimate want plot. lb character value indicate variable df contains lower bound estimate. ub character value indicate variable df contains upper bound estimate. color color want estimate density ? n condidence interval currently naively estimate uniformly distributing n observations lb ub","code":""},{"path":"/reference/plot_rdf_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"ggplot object containing plot.","code":""},{"path":"/reference/plot_rdf_estimate_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"Currently naively assumes uniform distribution lower upper bound   estimate display confidence interval.   See vignette package details implement RDF workflow.","code":""},{"path":"/reference/plot_rdf_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Researcher Degrees of Freedom Estimates' Density — plot_rdf_estimate_density","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"Visualizes variance estimates conditional selected discrete continous choice.","code":""},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"","code":"plot_rdf_estimates_by_choice(   df,   est,   lb,   ub,   dchoice,   color = NULL,   order = NULL,   width = 1 )"},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"df data frame generated exhaust_design(). est character value indicate variable df contains pont estimate want plot. lb character value indicating variable df contains lower bound estimate. ub character value indicating variable df contains upper bound estimate. dchoice character value indicate discrete choice want partition estimates . color character value indicate choice coloring point ranges. Can continous discrete. order character value indicate choice ordering point ranges. NULL (default), point ranges ordered estimate magnitude. width width parameter position_dodge2 spread point ranges within discrete choice area.","code":""},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"ggplot object containing plot.","code":""},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"See vignette package details implement RDF workflow.","code":""},{"path":"/reference/plot_rdf_estimates_by_choice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Estimates by Choice — plot_rdf_estimates_by_choice","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"Visualizes variance estimate conditional selected discrete choice.","code":""},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"","code":"plot_rdf_ridges_by_dchoice(df, est, dchoice, hist = FALSE, ...)"},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"df data frame generated exhaust_design(). est character value indicate variable df contains pont estimate want plot. dchoice character value indicate discrete choice want partition estimate ridgelines . hist Set true want histogram ridges instead densities. informative exact range coefficient look nice. Sets stat = \"binline\" geom_density_ridges call. Experiment parameter scale < 1 avoid overlapping histograms. ... Additional parameters passed  geom_density_ridges","code":""},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"ggplot object containing plot.","code":""},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"See vignette package details implement RDF workflow.","code":""},{"path":"/reference/plot_rdf_ridges_by_dchoice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Estimate Ridge Lines by Discrete Choice — plot_rdf_ridges_by_dchoice","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/plot_rdf_spec_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"Visualizes result estimate across researcher degrees freedom plotting specification curve introduced Simonsohn, Simmons Nelson.","code":""},{"path":"/reference/plot_rdf_spec_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"","code":"plot_rdf_spec_curve(   ests,   est,   lb = \"\",   ub = \"\",   sample_frac = 1,   est_label = est,   est_color = \"black\",   est_color_signeg = \"yellow\",   est_color_sigpos = \"blue\",   ribbon = nrow(ests) > 30,   ribbon_color = ifelse(nrow(ests) > 30, \"lightblue\", \"black\"),   choice_ind_point = TRUE,   pt_size = 0.1,   lower_to_upper = 3,   highlight = NULL,   pt_size_highlight = 3 )"},{"path":"/reference/plot_rdf_spec_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"ests data frame provided exhaust_design(). est character string indicating estimate want plot. lb character string indicating lower bound estimate. ub character string indicating upper bound estimate. lb und ub present plot includes confindence interval around estimate colors estimate points according significance (see ). sample_frac percentage protocols plottted. design produces many degrees freedom, sampling speeds plotting time makes plot less clutered. est_label Y-Axis label specification curve. Defaults est. est_color Color estimates points specification curve est_color_signeg Color significantly negative estimates. est_color_sigpos Color significantly positive estimates. ribbon TRUE ribbon displaying confidence interval plotted. FALSE, lines printed instead (looks nicer degrees freedom plot). ribbon_color applies either case (used lb ub present). ribbon_color Color confidence interval (used lb ub present). choice_ind_point Whether want choice indicators points (TRUE) vertical lines (FALSE). pt_size Point plot size estimates choice indicators highlighted (see ). lower_to_upper size choice part plot, relative specification curve . highlight NULL , want highlight certain protocols point size, data frame containing choices identify protocols. pt_size_highlight Point plot size highlighted estimates choice indicators.","code":""},{"path":"/reference/plot_rdf_spec_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"ggplot object.","code":""},{"path":"/reference/plot_rdf_spec_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"Significance estimates dislayed lb ub present. assessed testing whether lb ub equal sign. See vignette package details.","code":""},{"path":"/reference/plot_rdf_spec_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the Specification Curve of your Researcher Degrees of Freedom — plot_rdf_spec_curve","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/prepare_design_documentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Document your Research Design in a PDF File — prepare_design_documentation","title":"Document your Research Design in a PDF File — prepare_design_documentation","text":"Uses documentation block step generate rmarkdown based documentation research design.","code":""},{"path":"/reference/prepare_design_documentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Document your Research Design in a PDF File — prepare_design_documentation","text":"","code":"prepare_design_documentation(   d,   output_file,   title = \"Research Design\",   code = TRUE,   rmd_header = c(\"--- \", sprintf(\"title: \\\"%s\\\"\", title), sprintf(\"date: \\\"%s\\\"\",     Sys.Date()), \"output: pdf_document\", \"---\", \"\") )"},{"path":"/reference/prepare_design_documentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Document your Research Design in a PDF File — prepare_design_documentation","text":"d character vector research design steps function names output_file file name store PDF file . title title string. code logical value indicating whether R code design steps included documentation (defaults TRUE). rmd_header character value containing header rmarkdown file function generates. Defaults PDF output header","code":""},{"path":"/reference/prepare_design_documentation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Document your Research Design in a PDF File — prepare_design_documentation","text":"Output generated rmarkdown saved PDF file, need local rmarkdown installation capable produce PDF files.","code":""},{"path":"/reference/prepare_design_documentation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Document your Research Design in a PDF File — prepare_design_documentation","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/prepare_design_flow_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","title":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","text":"Generates DiagrammeR flow chart research design. Output can saved file directly viewed.","code":""},{"path":"/reference/prepare_design_flow_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","text":"","code":"prepare_design_flow_chart(   d,   file_name = NULL,   landscape = FALSE,   color_step = \"skyblue2\",   color_dchoice = \"skyblue3\",   color_cchoice = \"skyblue4\",   color_result = \"slategray\" )"},{"path":"/reference/prepare_design_flow_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","text":"d character vector research design steps function names file_name file name output PDF file relative working directory. landscape want flow chart generated horizontally instead vertically. Defaults FALSE. color_step fill color indicate design step. color_dchoice fill color indicate discrete choice. color_cchoice fill color indicate continuous choice. color_result fill color indicate result.","code":""},{"path":"/reference/prepare_design_flow_chart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","text":"rendered diagram , file_name specified, return code  DiagrammeRsvg::export_graph()","code":""},{"path":"/reference/prepare_design_flow_chart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare A Flow Chart of Your Research Design — prepare_design_flow_chart","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/shiny_rdf_spec_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"An Interactive Specification Curve — shiny_rdf_spec_curve","title":"An Interactive Specification Curve — shiny_rdf_spec_curve","text":"shiny based web app allows explore   researcher degrees freedom's specification curve interactively.","code":""},{"path":"/reference/shiny_rdf_spec_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Interactive Specification Curve — shiny_rdf_spec_curve","text":"","code":"shiny_rdf_spec_curve(   ests,   spec_curve_parms,   spec_curve_selected = NULL,   design = NULL,   rel_dir = NULL,   start_input = NULL,   libs = NULL,   add_files = NULL,   regression_cutoff = 5,   model_render_func = NULL,   default_choices = NULL,   title = \"A Shiny Specification Curve\",   abstract = NULL,   choice_labels = NULL )"},{"path":"/reference/shiny_rdf_spec_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An Interactive Specification Curve — shiny_rdf_spec_curve","text":"ests data frame provided exhaust_design. spec_curve_parms list containing additional parameters passed plot_rdf_spec_curve. can also provide named list lists list containing parameters specification curve. case, shiny app include additional Select Input element users can select specification curve display. spec_curve_selected provide named list specification curves spec_curve_parms, can provide name default curve plot first. design NULL takes design used generate estimates. case, either need required design elements current environment need specify rel_dir parameter pointing code files . addition, need set start_input. shiny app display regression results select choices generate less regression_cutoff estimates. rel_dir path code directory design functions located. needed functions loaded current environment See . start_input parameters pass first design step. See . libs vector containing additional packages need attached run design. NOTE: modify shiny app code include literal library() calls shinyapps.io includes libraries deployment. add_files character vector containing relative paths files directories want bundle shiny app. files copied temporary directory hosts shiny app directories copied recursively. regression_cutoff choices generate less equal estimates, display switch normal regression table output (needs parameters NULL). model_render_func function create regression table, taking list models parameter. function evaluated within shiny app environment. default (NULL), regressions rendered calling internal function renderModels() calls modelsummary create HTML output. need prep model data preparation, can provide function calls renderModels() prepping data. Alternatively, can provide function generates HTML output directly. default_choices list containing choices want app start . NULL, start choices included. title title shiny app. abstract Text displayed app. Wrapped HTML() can use HTML code. choice_labels Character vector containing labels used label select list input controls shiny app. NULL, select list input controls labeled based choice column names ests data frame.","code":""},{"path":"/reference/shiny_rdf_spec_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An Interactive Specification Curve — shiny_rdf_spec_curve","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/simulate_design_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"Uses simulation code, vector potential sample sizes priori assumption effect size estimate power research design.","code":""},{"path":"/reference/simulate_design_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"","code":"simulate_design_power(   d,   protocol,   input_sim_func,   range_n,   effect_size,   runs = 100,   input_sim_params = NULL )"},{"path":"/reference/simulate_design_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"d character vector research design steps function names protocol list choices steps design input_sim_func function , called, return simulated input first step function. See Details section information. range_n vector containing differnt sample sizes wan estimate power design. effect_size effect size want simulated data reflect. runs many runs want simulate estimate power? input_sim_params input_sim_func needs additional parameters besides n effect_size can provide list .","code":""},{"path":"/reference/simulate_design_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"data frame containing output last step design along simulation parameters,","code":""},{"path":"/reference/simulate_design_power.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"function provided via input_sim_func needs take sample size parameter effect size parameter first two input parameters. See vignette package additional information implement RDF analysis workfow.","code":""},{"path":"/reference/simulate_design_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use Simulated Data to Test the Power of Your Research Design — simulate_design_power","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/source_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Source the R Files that Contain the Design Steps — source_design","title":"Source the R Files that Contain the Design Steps — source_design","text":"sources code files constructed define_design()","code":""},{"path":"/reference/source_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Source the R Files that Contain the Design Steps — source_design","text":"","code":"source_design(   d,   rel_dir = \"code\",   one_file = FALSE,   one_file_name = \"design_steps.R\" )"},{"path":"/reference/source_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Source the R Files that Contain the Design Steps — source_design","text":"d character vector research design steps function names rel_dir relative path code directory, defaults \"code\" one_file TRUE, step code expected file name one_file_name. FALSE (default), step code expected separate file step name file name. one_file_name name code file containing code step code one file. Defaults \"design_steps.R\".","code":""},{"path":"/reference/source_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Source the R Files that Contain the Design Steps — source_design","text":"result source() command.","code":""},{"path":"/reference/source_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Source the R Files that Contain the Design Steps — source_design","text":"See vignette package details.","code":""},{"path":"/reference/source_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Source the R Files that Contain the Design Steps — source_design","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"},{"path":"/reference/test_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Design for Code Consistency — test_design","title":"Test Design for Code Consistency — test_design","text":"Test whether design steps can processed produce valid output possible choice.","code":""},{"path":"/reference/test_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Design for Code Consistency — test_design","text":"","code":"test_design(   d,   input = NULL,   input_test_code = NULL,   output_test_code = NULL,   ... )"},{"path":"/reference/test_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Design for Code Consistency — test_design","text":"d character vector research design steps function names input input parameter first step. Can either data (passed first step ) function. function, function called generate input data. provide input step_description, choice_description choice_type step tested consisitency. input provided, also need R code file test input validity. input_test_code path R file containg test code verifiy integrity input data. output_test_code character vector length equal length d containing paths test code files step's output. ... passed testthat::test_file()","code":""},{"path":"/reference/test_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Design for Code Consistency — test_design","text":"return value testthat::test_file()","code":""},{"path":"/reference/test_design.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test Design for Code Consistency — test_design","text":"called without parameters input, choice_type list structure   tested consistency. input provided, data steps tested across choices verify   produce structually valid output without errors warnings.   input_test_code provided test code used verify input.   output_test_code provided step's output tested.   See vignette package details.","code":""},{"path":"/reference/test_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Design for Code Consistency — test_design","text":"","code":"if (FALSE) {   print(\"Sorry. No examples yet.\") }"}]
