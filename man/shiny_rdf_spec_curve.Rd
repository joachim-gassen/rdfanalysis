% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_rdf_spec_curve.R
\name{shiny_rdf_spec_curve}
\alias{shiny_rdf_spec_curve}
\title{An Interactive Specification Curve}
\usage{
shiny_rdf_spec_curve(
  ests,
  spec_curve_parms,
  spec_curve_selected = NULL,
  design = NULL,
  rel_dir = NULL,
  start_input = NULL,
  libs = NULL,
  add_files = NULL,
  regression_cutoff = 5,
  model_render_func = NULL,
  default_choices = NULL,
  title = "A Shiny Specification Curve",
  abstract = NULL,
  choice_labels = NULL
)
}
\arguments{
\item{ests}{The data frame provided by \code{\link{exhaust_design}}.}

\item{spec_curve_parms}{A list containing additional parameters that will be
passed on to \code{\link{plot_rdf_spec_curve}}.
You can also provide a named list of lists with each list containing
parameters for a specification curve. In this case, the shiny app will
include an additional Select Input element where the users can select
which specification curve to display.}

\item{spec_curve_selected}{If you provide a named list of specification
curves in \code{spec_curve_parms}, you can provide here the name of
the default curve to plot first.}

\item{design}{if not \code{NULL} it takes the design that was used to generate
the estimates. In this case, you either need to have all required design
elements in your current environment or you need to specify the
\code{rel_dir} parameter pointing to the code files below. In addition, you
need to set \code{start_input}. The shiny app will then display
regression results when you select choices that generate less than
\code{regression_cutoff} estimates.}

\item{rel_dir}{The path to the code directory where the design functions are
located. Only needed when the functions are loaded to your current
environment See above.}

\item{start_input}{The parameters that you pass to the first design step.
See above.}

\item{libs}{A vector containing additional packages that need to be attached
to run the design. NOTE: This will modify the shiny app code to include
literal \code{library()} calls so that shinyapps.io includes the libraries
on deployment.}

\item{add_files}{A character vector containing relative paths to files and
directories that you want to bundle with the shiny app. The files will be
copied to the temporary directory that hosts the shiny app and directories
will be copied recursively.}

\item{regression_cutoff}{If your choices generate less or equal estimates,
the display will switch to normal regression table output (needs parameters
above to be not \code{NULL}).}

\item{model_render_func}{A function to create the regression table,
taking a list of the models as parameter. The function is evaluated within
the shiny app environment. By default (\code{NULL}),
the regressions are rendered by calling the internal function
\code{renderModels()} that then calls
\code{\link[modelsummary]{modelsummary}}
to create the HTML output.
If you need to prep the model data for preparation, you can provide
a function here that calls \code{renderModels()} after prepping the data.
Alternatively, you can provide a function
that generates the HTML output directly.}

\item{default_choices}{A list containing choices that you want
the app to start with. If \code{NULL}, it will start with all choices
included.}

\item{title}{The title of the shiny app.}

\item{abstract}{Text that will be displayed by the app. Wrapped
into \code{HTML()} so that you can use HTML code.}

\item{choice_labels}{Character vector containing the labels that will be used
to label the select list input controls in the shiny app. If \code{NULL},
the select list input controls are labeled based on the choice column names
from the \code{ests} data frame.}
}
\description{
A shiny based web app that allows you to explore your
  researcher degrees of freedom's specification curve interactively.
}
\examples{
\dontrun{
  print("Sorry. No examples yet.")
}
}
